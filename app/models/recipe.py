""" Define the Recipe model.  The schema mirrors the Bakespace data model."""
from typing import List, Optional
from pydantic import BaseModel, Field

# The core model for the recipe.  This will also be used by the parser to parse the output from the model
class Recipe(BaseModel):
    """ Define the Recipe model. """
    #recipeid: int -- this could be generated by the database
    name: str = Field(description = "The name of the recipe.")
    desc: Optional[str] = Field(description = "A short description of the recipe.")
    preptime: int = Field(description = "The time it takes to prepare the recipe.")
    cooktime: int = Field(description = "The time it takes to cook the recipe.")
    totaltime: int = Field(description = "The total time it takes to prepare and cook the recipe.")
    servings: int = Field(description = "The number of servings the recipe makes.")
    directions: List[str] = Field(description = "The directions for preparing the recipe.")
    ingredients: List[str] = Field(description = "The ingredients for the recipe.")
    calories: Optional[int] = Field(description = "The number of calories in the recipe.")
    
    @property
    def recipe_text(self):
        """ Return the recipe text. """
        return f"{self.name} {self.desc} {self.preptime} {self.cooktime} {self.totaltime} {self.servings} {self.directions} {self.ingredients} {self.calories}"
    